language: rust
rust: stable
dist: trusty

git:
  depth: 1

matrix:
  include:
    - name: "rustfmt"
      env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
      addons:
      before_script:
        - rustup component add rustfmt
      script:
        - cargo fmt --all -- --check
        - cd crates/cargo-test-macro
        - cargo fmt --all -- --check
        - cd ../crates-io
        - cargo fmt --all -- --check
        - cd ../resolver-tests
        - cargo fmt --all -- --check
        - cd ../../

    - env: TARGET=x86_64-unknown-linux-gnu
           ALT=i686-unknown-linux-gnu
      if: branch != master OR type = pull_request

    - env: TARGET=x86_64-apple-darwin
           ALT=i686-apple-darwin
      os: osx
      osx_image: xcode9.2
      if: branch != master OR type = pull_request

    - env: TARGET=x86_64-unknown-linux-gnu
           ALT=i686-unknown-linux-gnu
      rust: beta
      if: branch != master OR type = pull_request

    - env: TARGET=x86_64-unknown-linux-gnu
           ALT=i686-unknown-linux-gnu
      rust: nightly
      install:
        - travis_retry curl -Lf https://github.com/rust-lang-nursery/mdBook/releases/download/v0.3.1/mdbook-v0.3.1-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=$HOME/.cargo/bin
      script:
        - cargo test --features=deny-warnings || travis_terminate 1
        - cargo doc --no-deps || travis_terminate 1
        - (cd src/doc && mdbook build --dest-dir ../../target/doc) || travis_terminate 1
      if: branch != master OR type = pull_request

    - name: resolver tests
      rust: stable
      before_script: true
      script:
        - cargo test --manifest-path crates/resolver-tests/Cargo.toml
      if: branch != master OR type = pull_request

  exclude:
    - rust: stable

before_script:
  - rustup target add $ALT
  - rustup component add clippy || echo "clippy not available"
script:
  - cargo test --features=deny-warnings

notifications:
  email:
    on_success: never

addons:
  apt:
    packages:
      - gcc-multilib
