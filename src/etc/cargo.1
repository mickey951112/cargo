.TH CARGO "1" "November 2015" "cargo 0.9.0" "User Commands"
.SH NAME
cargo \- The Rust package manager
.SH SYNOPSIS
.B cargo
<COMMAND> [<ARGS>...]

.B cargo
[\fIOPTIONS\fR]

.SH DESCRIPTION
This program is a package manager for the Rust language, available at
<\fBhttp://rust-lang.org\fR>.

.SH OPTIONS

.TP
\fB\-h, \-\-help\fR
Display a help message
.TP
\fB\-V, \-\-version\fR
Print version information and exit
.TP
\fB\-\-list\fR
List all available cargo commands
.TP
\fB\-v, \-\-verbose\fR
Use verbose output
.TP
\fB\-\-color\fR
Configure coloring of output

.SH COMMANDS

To get extended information about commands, run 'cargo help <command>'

.TP
\fBcargo build\fR
Compile the current project
.TP
\fBcargo clean\fR
Remove the target directory with build output
.TP
\fBcargo doc\fR
Build this project's and its dependencies' documentation
.TP
\fBcargo init\fR
Create a new cargo project in the current directory
.TP
\fBcargo install\fR
Install a Rust binary
.TP
\fBcargo new\fR
Create a new cargo project
.TP
\fBcargo run\fR
Build and execute src/main.rs
.TP
\fBcargo test\fR
Run the tests for the package
.TP
\fBcargo bench\fR
Run the benchmarks for the package
.TP
\fBcargo update\fR
Update dependencies in Cargo.lock
.TP
\fBcargo package\fR
Generate a source tarball for the current package
.TP
\fBcargo publish\fR
Package and upload this project to the registry
.TP
\fBcargo uninstall\fR
Remove a Rust binary
.TP
\fBcargo search\fR
Search registry for crates
.TP
\fBcargo version\fR
Print cargo's version and exit

.SH FILES

.TP
~/.cargo
Directory in which Cargo stores repository data. Cargo can be instructed to use a .cargo subdirectory in a different location by setting the CARGO_HOME environment variable.

.SH "EXAMPLES"
Build a local package and all of its dependencies
    $ cargo build

Build a package with optimizations
    $ cargo build --release

Run tests for a cross-compiled target
    $ cargo test --target i686-unknown-linux-gnu

Create a new project that builds an executable
    $ cargo new --init foobar

Create a project in the current directory
    $ mkdir foo && cd foo
    $ cargo init .

Learn about a command's options and usage
    $ cargo help clean

.SH "SEE ALSO"

rustc(1), rustdoc(1)

.SH "BUGS"
See <\fBhttps://github.com/rust-lang/cargo/issues\fR> for issues.

.SH "COPYRIGHT"
This work is dual-licensed under Apache 2.0 and MIT terms.  See \fBCOPYRIGHT\fR
file in the cargo source distribution.
